[gd_scene load_steps=17 format=2]

[ext_resource path="res://actors/player/AnimatedSprite.tscn" type="PackedScene" id=1]
[ext_resource path="res://actors/player/playerState.gd" type="Script" id=2]
[ext_resource path="res://actors/player/tempChar.gd" type="Script" id=3]
[ext_resource path="res://actors/player/IS_JUMPING.gd" type="Script" id=4]
[ext_resource path="res://actors/player/IS_IDLE.gd" type="Script" id=5]
[ext_resource path="res://actors/player/IS_WALKING.gd" type="Script" id=6]
[ext_resource path="res://actors/player/IS_HANGING.gd" type="Script" id=7]
[ext_resource path="res://actors/player/IS_SPRINTING.gd" type="Script" id=8]
[ext_resource path="res://actors/player/IS_CLIMBING.gd" type="Script" id=9]
[ext_resource path="res://assets/lighting/light.png" type="Texture" id=10]

[sub_resource type="Shader" id=43]
code = "shader_type canvas_item;
render_mode unshaded;

// Texture must have 'Filter'-flag enabled!

// Automatic smoothing
// independent of geometry and perspective
vec4 texturePointSmooth(sampler2D smp, vec2 uv, vec2 pixel_size)
{
	vec2 ddx = dFdx(uv);
	vec2 ddy = dFdy(uv);
	vec2 lxy = sqrt(ddx * ddx + ddy * ddy);
	
	vec2 uv_pixels = uv / pixel_size;
	
	vec2 uv_pixels_floor = round(uv_pixels) - vec2(0.5f);
	vec2 uv_dxy_pixels = uv_pixels - uv_pixels_floor;
	
	uv_dxy_pixels = clamp((uv_dxy_pixels - vec2(0.5f)) * pixel_size / lxy + vec2(0.5f), 0.0f, 1.0f);
	
	uv = uv_pixels_floor * pixel_size;
	
	return textureGrad(smp, uv + uv_dxy_pixels * pixel_size, ddx, ddy);
}

void fragment()
{
	COLOR = texturePointSmooth(TEXTURE, UV, TEXTURE_PIXEL_SIZE);
}"

[sub_resource type="ShaderMaterial" id=44]
shader = SubResource( 43 )

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 5.5, 12 )

[sub_resource type="RectangleShape2D" id=41]
extents = Vector2( 4.75, 4.5 )

[sub_resource type="RectangleShape2D" id=45]
extents = Vector2( 5, 11.5 )

[sub_resource type="RectangleShape2D" id=42]
extents = Vector2( 5, 12 )

[node name="Player" type="KinematicBody2D"]
material = SubResource( 44 )
collision/safe_margin = 0.1
script = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -1, 2 )
shape = SubResource( 7 )

[node name="AnimatedSprite" parent="." instance=ExtResource( 1 )]
position = Vector2( 0, -1 )
animation = "run"
frame = 4
playing = true

[node name="climb" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="climb"]
position = Vector2( 0.75, -1 )
shape = SubResource( 41 )
disabled = true

[node name="playerState" type="Node" parent="."]
script = ExtResource( 2 )

[node name="IS_JUMPING" type="Node" parent="playerState"]
script = ExtResource( 4 )

[node name="IS_WALKING" type="Node" parent="playerState"]
script = ExtResource( 6 )

[node name="IS_IDLE" type="Node" parent="playerState"]
script = ExtResource( 5 )

[node name="IS_HANGING" type="Node" parent="playerState"]
script = ExtResource( 7 )

[node name="IS_SPRINTING" type="Node" parent="playerState"]
script = ExtResource( 8 )

[node name="IS_CLIMBING" type="Node" parent="playerState"]
script = ExtResource( 9 )

[node name="RichTextLabel" type="RichTextLabel" parent="."]
visible = false
margin_left = -14.0
margin_top = -27.0
margin_right = 90.0
margin_bottom = 5.0
tab_size = 2
text = "test"

[node name="detection_collider" type="Area2D" parent="."]
collision_layer = 2147483648
collision_mask = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="detection_collider"]
position = Vector2( -1, 1.5 )
shape = SubResource( 45 )

[node name="damage_collider" type="Area2D" parent="."]
collision_layer = 16
collision_mask = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="damage_collider"]
position = Vector2( -1, 2 )
shape = SubResource( 42 )

[node name="DamageTimer" type="Timer" parent="."]

[node name="Light2D" type="Light2D" parent="."]
texture = ExtResource( 10 )
color = Color( 1, 0.937255, 0, 1 )
energy = 0.7
shadow_enabled = true

[connection signal="area_entered" from="damage_collider" to="." method="_on_Area2D_area_entered"]
[connection signal="timeout" from="DamageTimer" to="." method="_on_DamageTimer_timeout"]
